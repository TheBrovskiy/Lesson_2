// 1. Задать целочисленный массив, состоящий из элементов 0 и 1. Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ]. С помощью цикла и условия заменить 0 на 1, 1 на 0.

public class Main {
    public static void main(String[] args) {
        int[] re = {1, 1, 0, 0, 1, 0, 1, 1, 0, 0};
        for (int i = 0; i < re.length; i++) {
        re[i] = (re[i] - 1) * - 1;
            System.out.print(re[i]);
        }}}

// 2. Задать пустой целочисленный массив размером 8. С помощью цикла заполнить его значениями 0 3 6 9 12 15 18 21;

public class Main {
    public static void main(String[] args) {
        int[] re = new int[8];
        for (int i = 0; i < re.length; i++) {
        re [i] = i * 3;
            System.out.println(re[i]);
        }}}
        
// 3. Задать массив [ 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 ] пройти по нему циклом, и числа меньшие 6 умножить на 2;

public class Main {
    public static void main(String[] args) {
        int[] re = {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};
        for (int i = 0; i < re.length; i++) {
            if (re[i] < 6) {
                    re[i] = re[i] * 2;
                    System.out.print(re[i] + " ");
                }
            }
        }
        }

4. Создать квадратный двумерный целочисленный массив (количество строк и столбцов одинаковое) и с помощью цикла(-ов) заполнить его диагональные элементы единицами;

public class Main {
    public static void main(String[] args) {
        int re[][] = new int[5][5];

         for (int i = 0; i < re.length; i++) {
            for (int j = 0; j < re[i].length; j++) {
            if (i == j || j == re[i].length - 1 - i) {
                re[i][j] = 1;
            }
                System.out.print(re[i][j] + " ");
            }
             System.out.println();
         }
    }
}

// 5. Задать одномерный массив и найти в нем минимальный и максимальный элементы (без помощи интернета);

public class Main {
    public static void main(String[] args) {
        int[] re = {-2, 0, 7, -9, 3};
        int min = re[0];
        int max = re[0];
        for (int i = 1; i < re.length; i++) {
            if (min > re[i]) {
                min = re[i];
            }
            if (max < re[i]) {
                max = re[i];
            }
        }
            System.out.print(min + " " + max);
        }
}
